"""Change data options

Revision ID: ed5b86141fe9
Revises: 3b4de2981cfb
Create Date: 2023-11-15 12:01:58.724339

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'ed5b86141fe9'
down_revision: Union[str, None] = '3b4de2981cfb'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('certificates', sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True))
    op.alter_column('certificates', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               nullable=True)
    op.create_unique_constraint(None, 'certificates', ['id'])
    op.add_column('employees', sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True))
    op.alter_column('employees', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               nullable=True)
    op.create_unique_constraint(None, 'employees', ['id'])
    op.add_column('exams', sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True))
    op.alter_column('exams', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               nullable=True)
    op.create_unique_constraint(None, 'exams', ['id'])
    op.add_column('examtypes', sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True))
    op.alter_column('examtypes', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               nullable=True)
    op.create_unique_constraint(None, 'examtypes', ['id'])
    op.add_column('positions', sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True))
    op.alter_column('positions', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               existing_nullable=True)
    op.create_unique_constraint(None, 'positions', ['id'])
    op.add_column('subdivisions', sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True))
    op.alter_column('subdivisions', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               nullable=True)
    op.create_unique_constraint(None, 'subdivisions', ['id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'subdivisions', type_='unique')
    op.alter_column('subdivisions', 'created_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               nullable=False)
    op.drop_column('subdivisions', 'updated_at')
    op.drop_constraint(None, 'positions', type_='unique')
    op.alter_column('positions', 'created_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=True)
    op.drop_column('positions', 'updated_at')
    op.drop_constraint(None, 'examtypes', type_='unique')
    op.alter_column('examtypes', 'created_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               nullable=False)
    op.drop_column('examtypes', 'updated_at')
    op.drop_constraint(None, 'exams', type_='unique')
    op.alter_column('exams', 'created_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               nullable=False)
    op.drop_column('exams', 'updated_at')
    op.drop_constraint(None, 'employees', type_='unique')
    op.alter_column('employees', 'created_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               nullable=False)
    op.drop_column('employees', 'updated_at')
    op.drop_constraint(None, 'certificates', type_='unique')
    op.alter_column('certificates', 'created_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               nullable=False)
    op.drop_column('certificates', 'updated_at')
    # ### end Alembic commands ###
